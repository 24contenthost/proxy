name: Start Infra (Proxy + Database) Service

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: [self-hosted, infra]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        #with:
         # sparse-checkout: |
          #  .deploy/docker-compose.yml
           # ./letsencrypt

      - name: Deploy application using Docker Compose
        env:
          COMPOSE_PROJECT_NAME: infra
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run: |
          export COMPOSE_PROJECT_NAME=infra
          
          docker-compose -f ./.deploy/docker-compose.yml pull
          docker-compose -f ./.deploy/docker-compose.yml down --remove-orphans || echo "No containers to remove"
          docker-compose -f ./.deploy/docker-compose.yml up -d
          
          # Wait for MySQL container to be ready (example with a simple check)
          echo "Waiting for MySQL to become available..."
          until docker exec mysql mysqladmin --user=root --password="${{ secrets.MYSQL_ROOT_PASSWORD }}" --host="localhost" ping --silent; do
            echo "Waiting for MySQL to be ready..."
            sleep 5
          done
          
          # Create databases and assign privileges using dynamic user and password
          docker exec mysql bash -c "echo \"CREATE DATABASE IF NOT EXISTS ${MYSQL_USER}_database; GRANT ALL PRIVILEGES ON ${MYSQL_USER}_database.* TO '${MYSQL_USER}'@'%' IDENTIFIED BY '${MYSQL_PASSWORD}'; FLUSH PRIVILEGES;\" | mysql -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }}"


          echo "Deployment completed successfully!"
